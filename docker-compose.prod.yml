
services:
  postgres:
    image: postgres:17.6-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # Don't expose ports in production - only accessible within network

  redis:
    image: redis:8.2.1-alpine
    restart: always
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}

  app:
    build:
      context: .
      args:
        ENVIRONMENT: production
    image: bondhu_ai:production
    restart: always
    ports:
      - "8000:8000"  # nginx will proxy to this
    environment:
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/0
      ENVIRONMENT: production
      DEBUG: false
    volumes:
      - uploads_data:/app/uploads
      - logs_data:/app/logs
    depends_on:
      - postgres
      - redis

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - uploads_data:/app/uploads:ro
    depends_on:
      - app

volumes:
  postgres_data:
  redis_data:
  uploads_data:
  logs_data: